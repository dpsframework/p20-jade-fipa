package org.omg.PortableServer;


/**
* org/omg/PortableServer/ServantRetentionPolicyValueHelper.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from /Users/russgold/projects/glassfish/glassfish-corba/target/checkout/omgapi/src/main/idl/poa.idl
* Friday, July 14, 2017 11:15:15 AM EDT
*/


/**
         * ServantRetentionPolicyValue can have the following 
         * values. RETAIN - to indicate that the POA will retain 
         * active servants in its Active Object Map. 
         * NON_RETAIN - to indicate Servants are not retained by 
         * the POA. If no ServantRetentionPolicy is specified at 
         * POA creation, the default is RETAIN.
         */
abstract public class ServantRetentionPolicyValueHelper
{
  private static String  _id = "IDL:omg.org/PortableServer/ServantRetentionPolicyValue:1.0";

  public static void insert (org.omg.CORBA.Any a, org.omg.PortableServer.ServantRetentionPolicyValue that)
  {
    org.omg.CORBA.portable.OutputStream out = a.create_output_stream ();
    a.type (type ());
    write (out, that);
    a.read_value (out.create_input_stream (), type ());
  }

  public static org.omg.PortableServer.ServantRetentionPolicyValue extract (org.omg.CORBA.Any a)
  {
    return read (a.create_input_stream ());
  }

  private static org.omg.CORBA.TypeCode __typeCode = null;
  synchronized public static org.omg.CORBA.TypeCode type ()
  {
    if (__typeCode == null)
    {
      __typeCode = org.omg.CORBA.ORB.init ().create_enum_tc (org.omg.PortableServer.ServantRetentionPolicyValueHelper.id (), "ServantRetentionPolicyValue", new String[] { "RETAIN", "NON_RETAIN"} );
    }
    return __typeCode;
  }

  public static String id ()
  {
    return _id;
  }

  public static org.omg.PortableServer.ServantRetentionPolicyValue read (org.omg.CORBA.portable.InputStream istream)
  {
    return org.omg.PortableServer.ServantRetentionPolicyValue.from_int (istream.read_long ());
  }

  public static void write (org.omg.CORBA.portable.OutputStream ostream, org.omg.PortableServer.ServantRetentionPolicyValue value)
  {
    ostream.write_long (value.value ());
  }

}
