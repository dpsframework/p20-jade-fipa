package org.omg.PortableServer;


/**
* org/omg/PortableServer/LifespanPolicyValueHelper.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from /Users/russgold/projects/glassfish/glassfish-corba/target/checkout/omgapi/src/main/idl/poa.idl
* Friday, July 14, 2017 11:15:15 AM EDT
*/


/**
         * The LifespanPolicyValue can have the following values.
         * TRANSIENT - The objects implemented in the POA 
         * cannot outlive the POA instance in which they are 
         * first created. 
         * PERSISTENT - The objects implemented in the POA can 
         * outlive the process in which they are first created. 
         */
abstract public class LifespanPolicyValueHelper
{
  private static String  _id = "IDL:omg.org/PortableServer/LifespanPolicyValue:1.0";

  public static void insert (org.omg.CORBA.Any a, org.omg.PortableServer.LifespanPolicyValue that)
  {
    org.omg.CORBA.portable.OutputStream out = a.create_output_stream ();
    a.type (type ());
    write (out, that);
    a.read_value (out.create_input_stream (), type ());
  }

  public static org.omg.PortableServer.LifespanPolicyValue extract (org.omg.CORBA.Any a)
  {
    return read (a.create_input_stream ());
  }

  private static org.omg.CORBA.TypeCode __typeCode = null;
  synchronized public static org.omg.CORBA.TypeCode type ()
  {
    if (__typeCode == null)
    {
      __typeCode = org.omg.CORBA.ORB.init ().create_enum_tc (org.omg.PortableServer.LifespanPolicyValueHelper.id (), "LifespanPolicyValue", new String[] { "TRANSIENT", "PERSISTENT"} );
    }
    return __typeCode;
  }

  public static String id ()
  {
    return _id;
  }

  public static org.omg.PortableServer.LifespanPolicyValue read (org.omg.CORBA.portable.InputStream istream)
  {
    return org.omg.PortableServer.LifespanPolicyValue.from_int (istream.read_long ());
  }

  public static void write (org.omg.CORBA.portable.OutputStream ostream, org.omg.PortableServer.LifespanPolicyValue value)
  {
    ostream.write_long (value.value ());
  }

}
