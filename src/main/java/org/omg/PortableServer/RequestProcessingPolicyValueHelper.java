package org.omg.PortableServer;


/**
* org/omg/PortableServer/RequestProcessingPolicyValueHelper.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from /Users/russgold/projects/glassfish/glassfish-corba/target/checkout/omgapi/src/main/idl/poa.idl
* Friday, July 14, 2017 11:15:15 AM EDT
*/


/**
         * The RequestProcessingPolicyValue can have the following
         * values.  USE_ACTIVE_OBJECT_MAP_ONLY - If the Object Id 
         * is not found in the Active Object Map, 
         * an OBJECT_NOT_EXIST exception is returned to the 
         * client. The RETAIN policy is also required.
         * USE_DEFAULT_SERVANT - If the Object Id is not found in 
         * the Active Object Map or the NON_RETAIN policy is 
         * present, and a default servant has been registered 
         * with the POA using the set_servant operation, 
         * the request is dispatched to the default servant. 
         * USE_SERVANT_MANAGER - If the Object Id is not found 
         * in the Active Object Map or the NON_RETAIN policy 
         * is present, and a servant manager has been registered 
         * with the POA using the set_servant_manager operation, 
         * the servant manager is given the opportunity to 
         * locate a servant or raise an exception. 
         */
abstract public class RequestProcessingPolicyValueHelper
{
  private static String  _id = "IDL:omg.org/PortableServer/RequestProcessingPolicyValue:1.0";

  public static void insert (org.omg.CORBA.Any a, org.omg.PortableServer.RequestProcessingPolicyValue that)
  {
    org.omg.CORBA.portable.OutputStream out = a.create_output_stream ();
    a.type (type ());
    write (out, that);
    a.read_value (out.create_input_stream (), type ());
  }

  public static org.omg.PortableServer.RequestProcessingPolicyValue extract (org.omg.CORBA.Any a)
  {
    return read (a.create_input_stream ());
  }

  private static org.omg.CORBA.TypeCode __typeCode = null;
  synchronized public static org.omg.CORBA.TypeCode type ()
  {
    if (__typeCode == null)
    {
      __typeCode = org.omg.CORBA.ORB.init ().create_enum_tc (org.omg.PortableServer.RequestProcessingPolicyValueHelper.id (), "RequestProcessingPolicyValue", new String[] { "USE_ACTIVE_OBJECT_MAP_ONLY", "USE_DEFAULT_SERVANT", "USE_SERVANT_MANAGER"} );
    }
    return __typeCode;
  }

  public static String id ()
  {
    return _id;
  }

  public static org.omg.PortableServer.RequestProcessingPolicyValue read (org.omg.CORBA.portable.InputStream istream)
  {
    return org.omg.PortableServer.RequestProcessingPolicyValue.from_int (istream.read_long ());
  }

  public static void write (org.omg.CORBA.portable.OutputStream ostream, org.omg.PortableServer.RequestProcessingPolicyValue value)
  {
    ostream.write_long (value.value ());
  }

}
