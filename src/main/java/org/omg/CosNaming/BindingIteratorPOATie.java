package org.omg.CosNaming;


/**
* org/omg/CosNaming/BindingIteratorPOATie.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from /Users/russgold/projects/glassfish/glassfish-corba/target/checkout/omgapi/src/main/idl/nameservice.idl
* Friday, July 14, 2017 11:15:15 AM EDT
*/


/**
   * The BindingIterator interface allows a client to iterate through
   * the bindings using the next_one or next_n operations.
   * 
   * The bindings iterator is obtained by using the <tt>list</tt>
   * method on the <tt>NamingContext</tt>. 
   * @see org.omg.CosNaming.NamingContext#list
   */
public class BindingIteratorPOATie extends BindingIteratorPOA
{

  // Constructors

  public BindingIteratorPOATie ( org.omg.CosNaming.BindingIteratorOperations delegate ) {
      this._impl = delegate;
  }
  public BindingIteratorPOATie ( org.omg.CosNaming.BindingIteratorOperations delegate , org.omg.PortableServer.POA poa ) {
      this._impl = delegate;
      this._poa      = poa;
  }
  public org.omg.CosNaming.BindingIteratorOperations _delegate() {
      return this._impl;
  }
  public void _delegate (org.omg.CosNaming.BindingIteratorOperations delegate ) {
      this._impl = delegate;
  }
  public org.omg.PortableServer.POA _default_POA() {
      if(_poa != null) {
          return _poa;
      }
      else {
          return super._default_POA();
      }
  }

  /**
       * This operation returns the next binding. If there are no more
       * bindings, false is returned.
       * 
       * @param b the returned binding
       */
  public boolean next_one (org.omg.CosNaming.BindingHolder b)
  {
    return _impl.next_one(b);
  } // next_one


  /**
       * This operation returns at most the requested number of bindings.
       * 
       * @param how_many the maximum number of bindings tro return <p>
       * 
       * @param bl the returned bindings
       */
  public boolean next_n (int how_many, org.omg.CosNaming.BindingListHolder bl)
  {
    return _impl.next_n(how_many, bl);
  } // next_n


  /**
       * This operation destroys the iterator.
       */
  public void destroy ()
  {
    _impl.destroy();
  } // destroy

  private org.omg.CosNaming.BindingIteratorOperations _impl;
  private org.omg.PortableServer.POA _poa;

} // class BindingIteratorPOATie
